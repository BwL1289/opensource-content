[flake8]
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
# Exclude some pydoctest checks globally:
ignore = E203, E266, E501, W503, D100, D104, D401, W504, RST303, RST304, DAR103, DAR203
max-line-length = 120
max-complexity = 18
doctests = True
enable-extensions = G
select = B,C,E,F,W,T4,B9
show-source = True
statistics = True
inline-quotes = double

# plugins
accept-encodings = utf-8
radon-max-cc = 10
radon-show-closures = True
radon-no-assert = True

# We need to configure the mypy.ini (ben note: changed this to setup.cfg where configs are located) because the flake8-mypy's default
# options don't properly override it, so if we don't specify it we get
# half of the config from mypy.ini and half from flake8-mypy.
mypy_config = "setup.cfg".mypy

# Excluding some directories:
exclude = .git,__pycache__,.venv,.eggs,*.egg/*,build,dist,tests/fixtures/**,tests/**/snapshots/**,.tox
  # These folders contain code badly written for reasons:
  # Project spefic, do not copy.

[mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
# The mypy configurations: http://bit.ly/2zEl9WI
python_version=3.12
platform=linux,macOS

# flake8-mypy expects the two following for sensible formatting
show_column_numbers=True

# show error messages from unrelated files
follow_imports=normal

# suppress errors about unsatisfied imports
ignore_missing_imports=True

# be strict
warn_return_any=True
warn_no_return=True
allow_redefinition = False
disallow_untyped_decorators = True
disallow_any_explicit = False
disallow_untyped_calls = True
disallow_any_generics=True
ignore_errors = False
implicit_reexport = False
strict_optional = True
strict_equality = True
no_implicit_optional = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True

# The following are off by default.  Flip them on if you feel
# adventurous.
disallow_untyped_defs=True
check_untyped_defs=False

# No incremental mode
cache_dir=/dev/null

[mypy-aiohttp.*]
follow_imports=skip
[mypy-_version]
follow_imports=skip

[darglint]
# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long

[tool:pytest]
# py.test configuration: http://doc.pytest.org/en/latest/customize.html
minversion = 2.8
norecursedirs = tests/fixtures *.egg .eggs dist build docs .tox .git __pycache__
testpaths = tests
python_files = *_test.py

filterwarnings =
  ignore::DeprecationWarning

addopts =
  --strict
  --doctest-modules
  --cov --cov-append
  --cov-branch
  --cov-report=term-missing:skip-covered
  --cov-report=html
  --cov-fail-under=0
  --cov-config=setup.cfg

[coverage:paths]
source = /app,/tests,*/site-packages

[coverage:run]
branch = True
concurrency = thread, multiprocessing
parallel = True
source = /app,/tests,tests

[coverage:report]
omit = blib2to3/*,tests/data/*,*/site-packages/*
show_missing = True
fail_under = 75
precision = 2

[doc8]
# doc8 configuration: https://pypi.org/project/doc8/
ignore-path = docs/_build
max-line-length = 120
sphinx = True

[ruff]
# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

line-length = 120
target-version = ['py312']
include = \.pyi?$
exclude =

  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | blib2to3
    | tests/data
    | profiling
  )/
 #|           # also separately exclude a file named foo.py in
                     # the root of the project

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=120

[isort:settings]
known_third_party =
